/*
 * GlobalMilesAirlineAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.globalmiles.api.test1.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

public enum CardTypeEnum {
    UNKNOWN, //Unknown
    BASIC, //Basic
    RED, //Red
    SILVER, //Silver
    GOLD, //Gold
    PLATINUM, //Platinum
    DIAMOND, //Diamond
    CORPARATE; //Corparate

    private static TreeMap<String, CardTypeEnum> valueMap = new TreeMap<String, CardTypeEnum>();
    private String value;

    static {
        UNKNOWN.value = "unknown";
        BASIC.value = "basic";
        RED.value = "red";
        SILVER.value = "silver";
        GOLD.value = "gold";
        PLATINUM.value = "platinum";
        DIAMOND.value = "diamond";
        CORPARATE.value = "corparate";

        valueMap.put("unknown", UNKNOWN);
        valueMap.put("basic", BASIC);
        valueMap.put("red", RED);
        valueMap.put("silver", SILVER);
        valueMap.put("gold", GOLD);
        valueMap.put("platinum", PLATINUM);
        valueMap.put("diamond", DIAMOND);
        valueMap.put("corparate", CORPARATE);
    }

    /**
     * Returns the enum member associated with the given string value
     * @return The enum member against the given string value */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static CardTypeEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member
     * @return The string value against enum member */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of CardTypeEnum values to list of string values
     * @param toConvert The list of CardTypeEnum values to convert
     * @return List of representative string values */
    public static List<String> toValue(List<CardTypeEnum> toConvert) {
        if(toConvert == null)
            return null;
        List<String> convertedValues = new ArrayList<String>();
        for (CardTypeEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 