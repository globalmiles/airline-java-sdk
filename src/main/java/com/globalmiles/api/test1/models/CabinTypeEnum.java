/*
 * GlobalMilesAirlineAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.globalmiles.api.test1.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

public enum CabinTypeEnum {
    A, //First Class Discounted
    B, //Economy/Coach
    C, //Business Class
    D, //Business Class Discounted
    E, //Shuttle Service (no reservation allowed) or Economy/Coach Discounted
    F, //First Class
    G, //Conditional Reservation
    H, //Economy/Coach Discounted
    J, //Business Class Premium
    K, //Economy/Coach Discounted
    L, //Economy/Coach Discounted
    M, //Economy/Coach Discounted
    N, //Economy/Coach Discounted
    P, //First Class Premium
    Q, //Economy/Coach Discounted
    R, //First Class Suite or Supersonic (discontinued)
    S, //Economy/Coach
    T, //Economy/Coach Discounted
    U, //Shuttle Service
    V, //Economy/Coach Discounted
    W, //Economy/Coach Premium
    X, //Economy/Coach Discounted
    Y, //Economy/Coach
    Z; //Business Class Discounted

    private static TreeMap<String, CabinTypeEnum> valueMap = new TreeMap<String, CabinTypeEnum>();
    private String value;

    static {
        A.value = "A";
        B.value = "B";
        C.value = "C";
        D.value = "D";
        E.value = "E";
        F.value = "F";
        G.value = "G";
        H.value = "H";
        J.value = "J";
        K.value = "K";
        L.value = "L";
        M.value = "M";
        N.value = "N";
        P.value = "P";
        Q.value = "Q";
        R.value = "R";
        S.value = "S";
        T.value = "T";
        U.value = "U";
        V.value = "V";
        W.value = "W";
        X.value = "X";
        Y.value = "Y";
        Z.value = "Z";

        valueMap.put("A", A);
        valueMap.put("B", B);
        valueMap.put("C", C);
        valueMap.put("D", D);
        valueMap.put("E", E);
        valueMap.put("F", F);
        valueMap.put("G", G);
        valueMap.put("H", H);
        valueMap.put("J", J);
        valueMap.put("K", K);
        valueMap.put("L", L);
        valueMap.put("M", M);
        valueMap.put("N", N);
        valueMap.put("P", P);
        valueMap.put("Q", Q);
        valueMap.put("R", R);
        valueMap.put("S", S);
        valueMap.put("T", T);
        valueMap.put("U", U);
        valueMap.put("V", V);
        valueMap.put("W", W);
        valueMap.put("X", X);
        valueMap.put("Y", Y);
        valueMap.put("Z", Z);
    }

    /**
     * Returns the enum member associated with the given string value
     * @return The enum member against the given string value */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static CabinTypeEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member
     * @return The string value against enum member */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of CabinTypeEnum values to list of string values
     * @param toConvert The list of CabinTypeEnum values to convert
     * @return List of representative string values */
    public static List<String> toValue(List<CabinTypeEnum> toConvert) {
        if(toConvert == null)
            return null;
        List<String> convertedValues = new ArrayList<String>();
        for (CabinTypeEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 